package ventanas;

import BD.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.EstadoTarea;
import modelo.TipoDeTarea;
import modelo.Usuario;
import static ventanas.MenuAdministrador.panelTablero;


/**
 *
 * @author ALEJO
 */
public class NuevaTarea extends javax.swing.JFrame {
      
    Usuario encargado;
    TipoDeTarea tipo_tarea;
    int id_tablero;
    String nombreTablero;
    String fecha_tarea; 
    java.sql.Date fecha;
    
    /**
     * Creates new form nuevoUsuario
     */
    public NuevaTarea() {       
        initComponents();
        setSize(431, 446);
        setResizable(false);
        setTitle("Nueva tarea");
        setLocationRelativeTo(null);
        
        nombreTablero = PanelTableros.tablero_update;
              
        //Declaramos un objeto tipo TipoDeTarea y se lo aprovisionamos al combobox de Tipo de tarea
        TipoDeTarea tipTarea = new TipoDeTarea();
        DefaultComboBoxModel modeloTiposTarea = new DefaultComboBoxModel(tipTarea.mostrarTiposDeTarea());
        cmb_tipoTarea.setModel(modeloTiposTarea);
        
        //Declaramos un objeto tipo Usuario y se lo aprovisionamos al combobox de encargado
        Usuario usu = new Usuario();
        DefaultComboBoxModel modeloMiembros = new DefaultComboBoxModel(usu.mostrarEncargadosDeTareas());
        cmb_encargados.setModel(modeloMiembros);
               
        
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/nuevaTarea.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_cancelar = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();
        cmb_tipoTarea = new javax.swing.JComboBox<>();
        txt_nombreTarea = new javax.swing.JTextField();
        cmb_encargados = new javax.swing.JComboBox<>();
        cmb_prioridad = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea_descripcion = new javax.swing.JTextArea();
        DtChooser_plazoTarea = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconImage(getIconImage());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Tipo de tarea:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Nombre de tarea:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Encargado:");

        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Save_icon-icons.com_73702.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        txt_nombreTarea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombreTareaKeyTyped(evt);
            }
        });

        cmb_prioridad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "BAJA", "MEDIA", "ALTA" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Prioridad:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Plazo:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Descripci√≥n:");

        txtArea_descripcion.setColumns(20);
        txtArea_descripcion.setLineWrap(true);
        txtArea_descripcion.setRows(5);
        txtArea_descripcion.setWrapStyleWord(true);
        txtArea_descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtArea_descripcionKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtArea_descripcion);

        DtChooser_plazoTarea.setDateFormatString("yyyy/MM/dd");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_tipoTarea, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_nombreTarea, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_prioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cmb_encargados, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DtChooser_plazoTarea, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(btn_guardar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_cancelar)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmb_tipoTarea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(txt_nombreTarea, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_encargados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_prioridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DtChooser_plazoTarea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Metodo del boton cancelar
    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        DetalleTablero.btn_nvaTarea.setEnabled(true);
        dispose();   
    }//GEN-LAST:event_btn_cancelarActionPerformed

    //Metodo boton Guardar
    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        registrarTarea();
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void txt_nombreTareaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreTareaKeyTyped
        //Forza a escribir en mayuscula
        char c=evt.getKeyChar();
        if(Character.isLowerCase(c)){
            evt.setKeyChar(Character.toUpperCase(c));
            
        }
    }//GEN-LAST:event_txt_nombreTareaKeyTyped

    private void txtArea_descripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArea_descripcionKeyTyped
        //Cuenta la cantidad maxima de caracteres
        int numeroCaracteres = 200;
        if(txtArea_descripcion.getText().length()== numeroCaracteres){
            evt.consume();
            JOptionPane.showMessageDialog(null,"La descripci√≥n no puede exceder de 200 caracteres.");
            
        }
    }//GEN-LAST:event_txtArea_descripcionKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevaTarea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevaTarea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevaTarea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevaTarea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevaTarea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DtChooser_plazoTarea;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JComboBox<String> cmb_encargados;
    private javax.swing.JComboBox<String> cmb_prioridad;
    private javax.swing.JComboBox<String> cmb_tipoTarea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtArea_descripcion;
    private javax.swing.JTextField txt_nombreTarea;
    // End of variables declaration//GEN-END:variables

       
    //Metodo que limpia el formulario 
    public void Limpiar(){
        cmb_tipoTarea.setSelectedIndex(0);
        txt_nombreTarea.setText("");
        cmb_encargados.setSelectedIndex(0);
        cmb_prioridad.setSelectedIndex(0);
        DtChooser_plazoTarea.setCalendar(null);
        txtArea_descripcion.setText("");
    }
    
    //Metodo que normaliza el formulario 
    public void Normalizar(){
        cmb_tipoTarea.setBackground(Color.WHITE);
        txt_nombreTarea.setBackground(Color.WHITE);
        cmb_encargados.setBackground(Color.WHITE);
        cmb_prioridad.setBackground(Color.WHITE);
        DtChooser_plazoTarea.setBackground(Color.WHITE);
        txtArea_descripcion.setBackground(Color.WHITE);
          
    }
    
    //Metodo que registra una tarea
    public void registrarTarea(){
        
        int tipoTarea_cmb, encargado_cmb, prioridad_cmb, validacion = 0;
        String nombreTarea, descripcion, prioridad_string = "";
                
        //Creamos un objeto de la clase modelo TipoDeTarea con lo seleccionado en el combobox de Tipo de Tarea
        tipo_tarea = (TipoDeTarea)cmb_tipoTarea.getSelectedItem();
        
        nombreTarea = txt_nombreTarea.getText().trim();
        
        //Creamos un objeto de la clase modelo Usuario con lo seleccionado en el combobox de encargado
        encargado = (Usuario)cmb_encargados.getSelectedItem();
        
        prioridad_cmb = cmb_prioridad.getSelectedIndex() + 1;
        
        descripcion = txtArea_descripcion.getText().trim();
        
        int validoTipo_tarea = tipo_tarea.getId();
        int validoEncargado = encargado.getId();
        
        Date fecha_plazo = DtChooser_plazoTarea.getDate();
        
        if(validoTipo_tarea==0){
            cmb_tipoTarea.setBackground(Color.red);
            validacion++;
        }
        
        if(nombreTarea.equals("")){
            txt_nombreTarea.setBackground(Color.red);
            validacion++;
        }
        
        if(validoEncargado==0){
            cmb_encargados.setBackground(Color.red);
            validacion++;
        }
        
        if(prioridad_cmb == 1){
            prioridad_string = "Seleccione";
            cmb_prioridad.setBackground(Color.red);
            validacion++;
        }        
        if(prioridad_cmb == 2){
            prioridad_string = "BAJA";
        }if(prioridad_cmb == 3){
            prioridad_string = "MEDIA";
        }if(prioridad_cmb == 4){
            prioridad_string = "ALTA";
        } 
        
        if (fecha_plazo != null) {
            Date date = DtChooser_plazoTarea.getDate();
            long d = date.getTime();
            fecha = new java.sql.Date(d); 
        }else{
            DtChooser_plazoTarea.setBackground(Color.red);
            validacion++;
         }
        
        if(descripcion.equals("")){
            txtArea_descripcion.setBackground(Color.red);
            validacion++;
        }
        
        //Consultamos el id del tablero en cuestion
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                "select Id_tablero from tableros where Nombre_tablero = '" + nombreTablero + "'");
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                id_tablero = rs.getInt("Id_tablero");
                cn.close();
            } 
        } catch (SQLException e) {
            System.err.println("Error en consultar id de tablero." + e);
            JOptionPane.showMessageDialog(null, "¬°¬°ERROR al comparar usuario!!, contacte al administrador.");
        }
            
        if (validacion == 0) {
            //Inserta el registro en la base de datos
            try {

                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                    "insert into tareas (Id_tarea, Id_tablero, Tipo_tarea, Nombre_tarea, Encargado, Estado, Prioridad, Fecha_Asignacion, Fecha_Plazo, Descripcion)values (?,?,?,?,?,?,?,?,?,?)");

                pst2.setInt(1, 0);
                pst2.setInt(2, id_tablero);
                pst2.setString(3, tipo_tarea.getTipoTarea());
                pst2.setString(4, nombreTarea);
                pst2.setString(5, encargado.getNombres());
                pst2.setString(6, "NUEVO");
                pst2.setString(7, prioridad_string);
                pst2.setString(8, fecha_de_tarea());
                pst2.setDate(9, fecha);
                pst2.setString(10, descripcion);
                
                 
                pst2.executeUpdate();
                cn2.close();
                                    

                Object[] fila = new Object[5];
                fila[0] = tipo_tarea.getTipoTarea();
                fila[1] = nombreTarea;
                fila[2] = encargado.getNombres();
                fila[3] = "NUEVO";
                fila[4] = fecha;

                DetalleTablero.modeloTabla.addRow(fila);

                Limpiar();                     

                cmb_tipoTarea.setBackground(Color.green);
                txt_nombreTarea.setBackground(Color.green);
                cmb_encargados.setBackground(Color.green); 
                cmb_prioridad.setBackground(Color.green); 
                DtChooser_plazoTarea.setBackground(Color.green);
                txtArea_descripcion.setBackground(Color.green);
                

                JOptionPane.showMessageDialog(null, "Registro exitoso.");
                this.dispose();
                DetalleTablero.btn_nvaTarea.setEnabled(true);
                
            } catch (SQLException e) {
                System.err.println("Error al Registrar tarea." + e);
                JOptionPane.showMessageDialog(null, "¬°¬°ERROR al registrar!!, contacte al administrador.");
            }  

            } else {
                JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos.");
                Normalizar();
            }           
    }     
     
    //Metodo que genera la fecha en que fue generada la tarea
    public String fecha_de_tarea(){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal = Calendar.getInstance();
        Date date = cal.getTime();
        fecha_tarea = sdf.format(date);
        return fecha_tarea;
    }
}


